
#viewerContainer {
  position: relative;
  overflow: auto;
  width: 100%;
  height: 100%;
  max-height: 100vh;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}
.filename{
  font-weight: 600;
}
.iconfont{
  cursor: pointer;
  margin-right: 1.2rem;
}
.float-left{
  float:left;
}
.float-right{
  float: right;
}
.action{
  line-height:50px;
  overflow: hidden;
}
.page-input{
  display: inline-block;
  input{
    width:60px;
    height:26px;
    text-align: center;
    outline:none;
    border: 1px solid #ddd;
  }
}
.line{
  display:inline-block;
  width: 1.5px;
  height: 20px;
  background-color: #ddd;
  margin: 0 10px;
  vertical-align: middle;
}
.full-box{
  background-color: rgba(0,0,0,.5);
  position: fixed;
  width: 100%;
  min-height: 100%;
}
:host ::ng-deep {
  
  canvas {
    margin: auto;
    display: block;
  }

  .pdfviewer{
    width: 100%;
    padding-top: 1.5rem;
  }
  
  .pdfviewer .page .loadingIcon {
    width: 2.9rem;
    height: 2.9rem;
    border: medium none;
    animation: 1s steps(10, end) 0s normal none infinite moveDefault;
    display: block;
    position: absolute;
    top: calc((100% - 2.9rem) / 2);
    left: calc((100% - 2.9rem) / 2);
  }
  
  @keyframes moveDefault {
    from {
      background-position: 0 top;
    }
  
    to {
      background-position: -39rem top;
    }
  }
  
  /* Copyright 2014 Mozilla Foundation
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *     http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    */
  
  .textLayer {
    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    overflow: hidden;
    opacity: 0.2;
    line-height: 1.0;
    border: 1px solid #333;
  }
  
  .textLayer > span {
    color: transparent;
    position: absolute;
    white-space: pre;
    cursor: text;
    -webkit-transform-origin: 0% 0%;
            transform-origin: 0% 0%;
  }
  
  .textLayer .highlight {
    margin: -1px;
    padding: 1px;
  
    background-color: rgb(180, 0, 170);
    border-radius: 4px;
  }
  
  .textLayer .highlight.begin {
    border-radius: 4px 0px 0px 4px;
  }
  
  .textLayer .highlight.end {
    border-radius: 0px 4px 4px 0px;
  }
  
  .textLayer .highlight.middle {
    border-radius: 0px;
  }
  
  .textLayer .highlight.selected {
    background-color: rgb(0, 100, 0);
  }
  
  .textLayer ::-moz-selection { background: rgb(0,0,255); }
  
  .textLayer ::selection { background: rgb(0,0,255); }
  
  .textLayer .endOfContent {
    display: block;
    position: absolute;
    left: 0px;
    top: 100%;
    right: 0px;
    bottom: 0px;
    z-index: -1;
    cursor: default;
    -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
  }
  
  .textLayer .endOfContent.active {
    top: 0px;
  }
  
  
  .annotationLayer section {
    position: absolute;
  }
  
  .annotationLayer .linkAnnotation > a,
  .annotationLayer .buttonWidgetAnnotation.pushButton > a {
    position: absolute;
    font-size: 1em;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  
  .annotationLayer .linkAnnotation > a:hover,
  .annotationLayer .buttonWidgetAnnotation.pushButton > a:hover {
    opacity: 0.2;
    background: #ff0;
    box-shadow: 0px 2px 10px #ff0;
  }
  
  .annotationLayer .textAnnotation img {
    position: absolute;
    cursor: pointer;
  }
  
  .annotationLayer .textWidgetAnnotation input,
  .annotationLayer .textWidgetAnnotation textarea,
  .annotationLayer .choiceWidgetAnnotation select,
  .annotationLayer .buttonWidgetAnnotation.checkBox input,
  .annotationLayer .buttonWidgetAnnotation.radioButton input {
    background-color: rgba(0, 54, 255, 0.13);
    border: 1px solid transparent;
    box-sizing: border-box;
    font-size: 9px;
    height: 100%;
    margin: 0;
    padding: 0 3px;
    vertical-align: top;
    width: 100%;
  }
  
  .annotationLayer .choiceWidgetAnnotation select option {
    padding: 0;
  }
  
  .annotationLayer .buttonWidgetAnnotation.radioButton input {
    border-radius: 50%;
  }
  
  .annotationLayer .textWidgetAnnotation textarea {
    font: message-box;
    font-size: 9px;
    resize: none;
  }
  
  .annotationLayer .textWidgetAnnotation input[disabled],
  .annotationLayer .textWidgetAnnotation textarea[disabled],
  .annotationLayer .choiceWidgetAnnotation select[disabled],
  .annotationLayer .buttonWidgetAnnotation.checkBox input[disabled],
  .annotationLayer .buttonWidgetAnnotation.radioButton input[disabled] {
    background: none;
    border: 1px solid transparent;
    cursor: not-allowed;
  }
  
  .annotationLayer .textWidgetAnnotation input:hover,
  .annotationLayer .textWidgetAnnotation textarea:hover,
  .annotationLayer .choiceWidgetAnnotation select:hover,
  .annotationLayer .buttonWidgetAnnotation.checkBox input:hover,
  .annotationLayer .buttonWidgetAnnotation.radioButton input:hover {
    border: 1px solid #000;
  }
  
  .annotationLayer .textWidgetAnnotation input:focus,
  .annotationLayer .textWidgetAnnotation textarea:focus,
  .annotationLayer .choiceWidgetAnnotation select:focus {
    background: none;
    border: 1px solid transparent;
  }
  
  .annotationLayer .buttonWidgetAnnotation.checkBox input:checked:before,
  .annotationLayer .buttonWidgetAnnotation.checkBox input:checked:after,
  .annotationLayer .buttonWidgetAnnotation.radioButton input:checked:before {
    background-color: #000;
    content: '';
    display: block;
    position: absolute;
  }
  
  .annotationLayer .buttonWidgetAnnotation.checkBox input:checked:before,
  .annotationLayer .buttonWidgetAnnotation.checkBox input:checked:after {
    height: 80%;
    left: 45%;
    width: 1px;
  }
  
  .annotationLayer .buttonWidgetAnnotation.checkBox input:checked:before {
    -webkit-transform: rotate(45deg);
            transform: rotate(45deg);
  }
  
  .annotationLayer .buttonWidgetAnnotation.checkBox input:checked:after {
    -webkit-transform: rotate(-45deg);
            transform: rotate(-45deg);
  }
  
  .annotationLayer .buttonWidgetAnnotation.radioButton input:checked:before {
    border-radius: 50%;
    height: 50%;
    left: 30%;
    top: 20%;
    width: 50%;
  }
  
  .annotationLayer .textWidgetAnnotation input.comb {
    font-family: monospace;
    padding-left: 2px;
    padding-right: 0;
  }
  
  .annotationLayer .textWidgetAnnotation input.comb:focus {
    /*
      * Letter spacing is placed on the right side of each character. Hence, the
      * letter spacing of the last character may be placed outside the visible
      * area, causing horizontal scrolling. We avoid this by extending the width
      * when the element has focus and revert this when it loses focus.
      */
    width: 115%;
  }
  
  .annotationLayer .buttonWidgetAnnotation.checkBox input,
  .annotationLayer .buttonWidgetAnnotation.radioButton input {
    -webkit-appearance: none;
        -moz-appearance: none;
            appearance: none;
    padding: 0;
  }
  
  .annotationLayer .popupWrapper {
    position: absolute;
    width: 20em;
  }
  
  .annotationLayer .popup {
    position: absolute;
    z-index: 200;
    max-width: 20em;
    background-color: #FFFF99;
    box-shadow: 0px 2px 5px #888;
    border-radius: 2px;
    padding: 6px;
    margin-left: 5px;
    cursor: pointer;
    font: message-box;
    font-size: 9px;
    word-wrap: break-word;
  }
  
  .annotationLayer .popup > * {
    font-size: 9px;
  }
  
  .annotationLayer .popup h1 {
    display: inline-block;
  }
  
  .annotationLayer .popup span {
    display: inline-block;
    margin-left: 5px;
  }
  
  .annotationLayer .popup p {
    border-top: 1px solid #333;
    margin-top: 2px;
    padding-top: 2px;
  }
  
  .annotationLayer .highlightAnnotation,
  .annotationLayer .underlineAnnotation,
  .annotationLayer .squigglyAnnotation,
  .annotationLayer .strikeoutAnnotation,
  .annotationLayer .freeTextAnnotation,
  .annotationLayer .lineAnnotation svg line,
  .annotationLayer .squareAnnotation svg rect,
  .annotationLayer .circleAnnotation svg ellipse,
  .annotationLayer .polylineAnnotation svg polyline,
  .annotationLayer .polygonAnnotation svg polygon,
  .annotationLayer .caretAnnotation,
  .annotationLayer .inkAnnotation svg polyline,
  .annotationLayer .stampAnnotation,
  .annotationLayer .fileAttachmentAnnotation {
    cursor: pointer;
  }
  
  .pdfviewer .canvasWrapper {
    overflow: hidden;
    border: 1px solid #333;
  }
  
    .pdfviewer .page {
      direction: ltr;
      width: 816px;
      height: 1056px;
      margin: 0 auto 20px auto;
      position: relative;
      overflow: visible;
      border: 1px solid #ddd;
      background-clip: content-box;
      /* -webkit-border-image: url(images/shadow.png) 9 9 repeat;
            -o-border-image: url(images/shadow.png) 9 9 repeat;
              border-image: url(images/shadow.png) 9 9 repeat; */
      background-color: white;
    }
  
  .pdfviewer.removePageBorders .page {
    margin: 0px auto 10px auto;
    border: none;
  }
  
  .pdfviewer.singlePageView {
    display: inline-block;
  }
  
  .pdfviewer.singlePageView .page {
    margin: 0;
    border: none;
  }
  
  .pdfviewer.scrollHorizontal, .pdfviewer.scrollWrapped, .spread {
    margin-left: 3.5px;
    margin-right: 3.5px;
    text-align: center;
  }
  
  .pdfviewer.scrollHorizontal, .spread {
    white-space: nowrap;
  }
  
  .pdfviewer.removePageBorders,
  .pdfviewer.scrollHorizontal .spread,
  .pdfviewer.scrollWrapped .spread {
    margin-left: 0;
    margin-right: 0;
  }
  
  .spread .page,
  .pdfviewer.scrollHorizontal .page,
  .pdfviewer.scrollWrapped .page,
  .pdfviewer.scrollHorizontal .spread,
  .pdfviewer.scrollWrapped .spread {
    display: inline-block;
    vertical-align: middle;
  }
  
  .spread .page,
  .pdfviewer.scrollHorizontal .page,
  .pdfviewer.scrollWrapped .page {
    margin-left: -3.5px;
    margin-right: -3.5px;
  }
  
  .pdfviewer.removePageBorders .spread .page,
  .pdfviewer.removePageBorders.scrollHorizontal .page,
  .pdfviewer.removePageBorders.scrollWrapped .page {
    margin-left: 5px;
    margin-right: 5px;
  }
  
  .pdfviewer .page canvas {
    margin: 0;
    display: block;
  }
  
  .pdfviewer .page canvas[hidden] {
    display: none;
  }
  
  .pdfviewer .page .loadingIcon {
    position: absolute;
    display: block;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    /* background: url('images/loading-icon.gif') center no-repeat; */
  }
  
  .pdfPresentationMode .pdfviewer {
    margin-left: 0;
    margin-right: 0;
  }
  
  .pdfPresentationMode .pdfviewer .page,
  .pdfPresentationMode .pdfviewer .spread {
    display: block;
  }
  
  .pdfPresentationMode .pdfviewer .page,
  .pdfPresentationMode .pdfviewer.removePageBorders .page {
    margin-left: auto;
    margin-right: auto;
  }
  
  .pdfPresentationMode:-ms-fullscreen .pdfviewer .page {
    margin-bottom: 100% !important;
  }
  
  .pdfPresentationMode:-webkit-full-screen .pdfviewer .page {
    margin-bottom: 100%;
    border: 0;
  }
  
  .pdfPresentationMode:-moz-full-screen .pdfviewer .page {
    margin-bottom: 100%;
    border: 0;
  }
  
  .pdfPresentationMode:fullscreen .pdfviewer .page {
    margin-bottom: 100%;
    border: 0;
  }
}
  